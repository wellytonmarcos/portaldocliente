import 'package:flutter/material.dart';
import 'package:portaldocliente/models/auth_model.dart';

class LoginController = _LoginController with _$LoginController;

abstract class _LoginController with Store {
  AuthModel _authModel = AuthModel();
  TextEditingController emailController = TextEditingController();
  TextEditingController passwordController = TextEditingController();

  @observable
  bool rememberMe = false;

  @observable
  String email = "naoinformado@gmail.com";

  @observable
  String password = "";

  @observable
  bool passwordVisible = false;

  @observable
  bool loading = false;

  @action
  void setEmail(String _email) => email = _email;

  @action
  void setPassword(String value) => password = value;

  @action
  void toggleRemeberMe() {
    rememberMe = !rememberMe;
    _authModel.setRememberMe(rememberMe);
  }

  @action
  void togglePasswordVisible() => passwordVisible = !passwordVisible;

  @computed
  bool get isPasswordValid => password.length > 6;

  @computed
  Function get loginPressed =>
      (isEmailValid && isPasswordValid && !loading) ? login : null;

  @computed
  bool get isEmailValid => RegExp(
          r"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\.[a-zA-Z]+")
      .hasMatch(email);

  @computed
  bool get isFormValid => isPasswordValid && isEmailValid;

  @computed
  bool get isVisiblePassword => passwordVisible;
  @computed
  bool get isRememberMe => rememberMe;

  @action
  Future<bool> initSettings() async {
    rememberMe = await _authModel.checkRememberMe();
    if (rememberMe) {
      email = await _authModel.checkSavedEmail();
      emailController.text = email;
      setEmail(email);
    }
    return true;
  }

  @action
  Future<void> login() async {
    loading = true;
    var result = await _authModel.login(pEmail: email, pPassword: password);
    if (result) {}
    print(result);
    loading = false;
  }

  void toggleRememberMe(bool _rememberMe) async {}
}
